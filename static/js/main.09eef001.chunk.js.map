{"version":3,"sources":["redux/user/user.types.js","firebase/firebase.utils.js","pages/Signin.js","pages/History.js","pages/Main.js","App.js","redux/user/user.actions.js","redux/user/user.reducer.js","redux/root-reducer.js","redux/store.js","index.js"],"names":["UserTypes","SET_CURRENT_USER","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","auth","provider","firestore","GoogleAuthProvider","setCustomParameters","prompt","signInWithGoogle","signInWithPopup","SignIn","Component","constructor","super","this","state","email","password","render","Container","style","display","flexDirection","alignItems","width","justifyContent","marginTop","Row","onClick","styles","text","icon","name","fontWeight","margin","height","History","React","props","fetchData","a","currentUser","fetch","uid","response","json","key","resData","loadedData","push","setState","data","console","log","componentDidMount","countTotal","totalSalary","totalTax","item","salary","tax","Table","map","index","scope","value","className","displayType","thousandSeparator","suffix","renderText","date","bind","Main","useState","Date","startDate","setStartDate","activeTab","setActiveTab","setSalary","result","setResult","numOfDependent","setNumOfDependent","toggle","tab","handleSummit","method","headers","body","JSON","stringify","Number","toDateString","maxWidth","displayName","signOut","flex","Nav","tabs","NavItem","NavLink","alignSelf","classnames","active","TabContent","TabPane","tabId","Form","FormGroup","Col","Label","selected","onChange","Input","e","target","borderWidth","borderColor","borderRadius","placeholder","type","id","multiple","color","Button","RegExp","test","countedSalary","toFixed","marginLeft","App","setCurrentUser","onAuthStateChanged","user","connect","dispatch","payload","INITIAL_STATE","userReducer","action","combineReducers","middleWares","logger","store","createStore","rootReducer","applyMiddleware","rootElement","document","getElementById","ReactDOM","StrictMode"],"mappings":"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","file":"static/js/main.09eef001.chunk.js","sourcesContent":["const UserTypes = {\r\n    SET_CURRENT_USER: 'SET_CURRENT_USER',\r\n}\r\n\r\nexport default UserTypes","import firebase from 'firebase/app'\r\nimport 'firebase/firestore'\r\nimport 'firebase/auth'\r\n\r\nconst config = {\r\n    apiKey: \"AIzaSyBYrIABkFQh7pj3Gtdk2y9SGqjunNG9AlA\",\r\n    authDomain: \"huwngnosleeppp.firebaseapp.com\",\r\n    projectId: \"huwngnosleeppp\",\r\n    storageBucket: \"huwngnosleeppp.appspot.com\",\r\n    messagingSenderId: \"533381222168\",\r\n    appId: \"1:533381222168:web:fa9a112734c4810710186d\"\r\n}\r\n\r\nfirebase.initializeApp(config)\r\n\r\nexport const auth = firebase.auth()\r\nexport const firestore = firebase.firestore()\r\n\r\nconst provider = new firebase.auth.GoogleAuthProvider()\r\nprovider.setCustomParameters({ prompt: 'select_account' })\r\nexport const signInWithGoogle = () => auth.signInWithPopup(provider)\r\n\r\nexport default firebase","import React, { Component } from 'react'\r\n\r\nimport { signInWithGoogle } from '../firebase/firebase.utils'\r\n\r\nimport { Form, Input, Button, Container, Label, Row } from 'reactstrap'\r\n\r\nexport default class SignIn extends Component {\r\n    constructor() {\r\n        super()\r\n\r\n        this.state = {\r\n            email: '',\r\n            password: '',\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Container\r\n                style={{\r\n                    display: 'flex',\r\n                    flexDirection: 'column',\r\n                    alignItems: 'center',\r\n                    width: '100%',\r\n                    justifyContent: 'center',\r\n                    marginTop: 30,\r\n                }}\r\n            >\r\n                <h4>Personal Income Tax Calculator</h4>\r\n\r\n\r\n                <Row\r\n                    style={{\r\n                        display: 'flex',\r\n                        justifyContent: 'center',\r\n                        alignItems: 'center',\r\n                        marginTop: 20\r\n                    }}\r\n                    onClick={signInWithGoogle}>\r\n                    <p style={styles.text}>Sign in with Google</p>\r\n                    <ion-icon style={styles.icon} name=\"logo-google\"></ion-icon>\r\n                </Row>\r\n            </Container>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nconst styles = {\r\n    text: {\r\n        fontWeight: 'bold',\r\n        margin: '0 5px',\r\n    },\r\n    icon: {\r\n        height: '1.5rem',\r\n        width: '1.2rem',\r\n        margin: '0 5px',\r\n    }\r\n}","import React, { Component, useState } from 'react'\r\n\r\nimport { signInWithGoogle } from '../firebase/firebase.utils'\r\nimport {\r\n    Table\r\n} from 'reactstrap'\r\nimport classnames from 'classnames';\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport 'react-datepicker/dist/react-datepicker-cssmodules.css';\r\nimport NumberFormat from 'react-number-format';\r\n\r\nexport default class History extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            data: []\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.fetchData()\r\n    }\r\n\r\n    countTotal() {\r\n        let totalSalary = 0, totalTax = 0\r\n\r\n        for (const item of this.state.data) {\r\n            totalSalary += item.salary\r\n            totalTax += item.tax\r\n        }\r\n\r\n        return [totalSalary, totalTax]\r\n    }\r\n\r\n    fetchData = async () => {\r\n        const { currentUser } = this.props\r\n\r\n        try {\r\n            const response = await fetch(`https://huwngnosleeppp-default-rtdb.firebaseio.com/users/${currentUser.uid}/history.json`)\r\n\r\n            const resData = await response.json()\r\n\r\n            const loadedData = []\r\n            for (const key in resData) {\r\n                loadedData.push(resData[key])\r\n            }\r\n            this.setState({\r\n                data: loadedData\r\n            })\r\n\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Table>\r\n                <thead>\r\n                    <tr>\r\n                        <th>#</th>\r\n                        <th>Salary</th>\r\n                        <th>Tax</th>\r\n                        <th>Time</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {this.state.data.map((item, index) =>\r\n                        <tr>\r\n                            <th scope=\"row\">{index + 1}</th>\r\n                            <td>\r\n                                <NumberFormat\r\n                                    value={item.salary}\r\n                                    className=\"foo\"\r\n                                    displayType={'text'}\r\n                                    thousandSeparator={true}\r\n                                    suffix={' VND'}\r\n                                    renderText={(value, props) => <p {...props}>{`${value}`}</p>}\r\n                                /></td>\r\n                            <td>\r\n                                <NumberFormat\r\n                                    value={item.tax}\r\n                                    className=\"foo\"\r\n                                    displayType={'text'}\r\n                                    thousandSeparator={true}\r\n                                    suffix={' VND'}\r\n                                    renderText={(value, props) => <p {...props}>{`${value}`}</p>}\r\n                                /></td>\r\n                            <td>{item.date}</td>\r\n                        </tr>\r\n                    )}\r\n                    <tr>\r\n                        <th scope=\"row\">Tổng</th>\r\n                        <td>\r\n                            <NumberFormat\r\n                                value={this.countTotal.bind(this)()[0]}\r\n                                className=\"foo\"\r\n                                displayType={'text'}\r\n                                thousandSeparator={true}\r\n                                suffix={' VND'}\r\n                                renderText={(value, props) => <p {...props}>{`${value}`}</p>}\r\n                            /></td>\r\n                        <td>\r\n                            <NumberFormat\r\n                                value={this.countTotal.bind(this)()[1]}\r\n                                className=\"foo\"\r\n                                displayType={'text'}\r\n                                thousandSeparator={true}\r\n                                suffix={' VND'}\r\n                                renderText={(value, props) => <p {...props}>{`${value}`}</p>}\r\n                            /></td>\r\n                        <td></td>\r\n                    </tr>\r\n                </tbody>\r\n            </Table>\r\n\r\n        )\r\n\r\n    }\r\n}","import React, { Component, useState } from 'react'\r\n\r\nimport { signInWithGoogle } from '../firebase/firebase.utils'\r\nimport {\r\n    Form, Input, Button, Container, Label, Row, Col,\r\n    FormGroup, FormText,\r\n    TabContent, TabPane, Nav, NavItem, NavLink, Card, CardTitle, CardText,\r\n} from 'reactstrap'\r\nimport classnames from 'classnames';\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport 'react-datepicker/dist/react-datepicker-cssmodules.css';\r\nimport NumberFormat from 'react-number-format';\r\nimport History from './History';\r\nimport { auth } from '../firebase/firebase.utils';\r\n\r\nexport default function Main({ currentUser }) {\r\n    const [startDate, setStartDate] = useState(new Date());\r\n    const [activeTab, setActiveTab] = useState('1');\r\n    const [salary, setSalary] = useState(\"0\")\r\n    const [result, setResult] = useState(null)\r\n    const [showError, setShowError] = useState(false)\r\n    const [numOfDependent, setNumOfDependent] = useState(0)\r\n\r\n    const toggle = tab => {\r\n        if (activeTab !== tab) setActiveTab(tab);\r\n    }\r\n\r\n    const handleSummit = async (tax) => {\r\n        setResult(tax)\r\n        try {\r\n            const response = await fetch(`https://huwngnosleeppp-default-rtdb.firebaseio.com//users/${currentUser.uid}/history.json`, {\r\n                method: \"POST\",\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify({\r\n                    tax: Number(tax),\r\n                    salary: Number(salary),\r\n                    date: startDate.toDateString(),\r\n                })\r\n            })\r\n\r\n            const resData = await response.json()\r\n            console.log(resData)\r\n\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n\r\n    }\r\n\r\n    const onSubmit = () => {\r\n        // validate if input is number to calculate\r\n        var reg = new RegExp('^[0-9]+$');\r\n        if (reg.test(salary)) {\r\n            // counted salary = monthly salary - numOfDependence * 4,4 - 11\r\n            const countedSalary = salary - numOfDependent * 4400000 - 11000000\r\n            let tax = 0\r\n\r\n            if (countedSalary < 0) {\r\n                return handleSummit(0)\r\n            }\r\n\r\n            if (countedSalary <= 5000000) {\r\n                tax = countedSalary * 0.05\r\n            } else if (countedSalary <= 10000000) {\r\n                tax = countedSalary * 0.1 - 250000\r\n            } else if (countedSalary <= 18000000) {\r\n                tax = countedSalary * 0.15 - 750000\r\n            } else if (countedSalary <= 32000000) {\r\n                tax = countedSalary * 0.2 - 1650000\r\n            } else if (countedSalary <= 52000000) {\r\n                tax = countedSalary * 0.25 - 3250000\r\n            } else if (countedSalary <= 80000000) {\r\n                tax = countedSalary * 0.3 - 5850000\r\n            } else if (countedSalary > 80000000) {\r\n                tax = countedSalary * 0.35 - 9850000\r\n            }\r\n\r\n            return handleSummit(tax.toFixed(0))\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <Container style={{\r\n            display: 'flex', flexDirection: 'column',\r\n            height: 600, maxWidth: 600,\r\n            marginTop: 30\r\n\r\n        }}>\r\n\r\n            <p>{`Hi there, ${currentUser.displayName}!`}</p>\r\n            <p>{`Email: ${currentUser.email}`}</p>\r\n            <b onClick={() => auth.signOut()}>Sign out</b>\r\n\r\n            <div style={{ width: '100%', flex: 1, marginTop: 30 }}>\r\n                <Nav tabs>\r\n                    <NavItem style={{ flex: 1, }}>\r\n                        <NavLink\r\n                            style={{ flex: 1, justifyContent: 'center', alignSelf: 'center', display: 'flex' }}\r\n                            className={classnames({ active: activeTab === '1' })}\r\n                            onClick={() => { toggle('1'); }}\r\n                        >\r\n                            Monthly Income Tax\r\n                        </NavLink>\r\n                    </NavItem>\r\n                    <NavItem style={{ flex: 1, }}>\r\n                        <NavLink\r\n                            style={{ flex: 1, justifyContent: 'center', alignSelf: 'center', display: 'flex' }}\r\n                            className={classnames({ active: activeTab === '2' })}\r\n                            onClick={() => { toggle('2'); }}\r\n                        >\r\n                            History\r\n                        </NavLink>\r\n                    </NavItem>\r\n                </Nav>\r\n                <TabContent activeTab={activeTab}>\r\n                    <TabPane tabId=\"1\" style={{ flex: 1, height: '100%' }}>\r\n                        <Form style={{ margin: 20 }}>\r\n                            <FormGroup>\r\n                                <Row>\r\n                                    <Col >\r\n                                        <Label>Date: </Label>\r\n                                    </Col>\r\n\r\n                                    <Col>\r\n                                        <DatePicker\r\n                                            selected={startDate} onChange={(date) => setStartDate(date)} />\r\n                                    </Col>\r\n                                </Row>\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                                <Row>\r\n                                    <Col >\r\n                                        <Label >Salary</Label>\r\n                                    </Col>\r\n\r\n                                    <Col>\r\n                                        <Input\r\n                                            value={salary}\r\n                                            onChange={(e) => setSalary(e.target.value)}\r\n                                            style={{ width: '70%', height: 30, borderWidth: 1, borderColor: '#333', borderRadius: 0 }}\r\n                                            placeholder=\"Your salary, VND\" />\r\n                                    </Col>\r\n                                </Row>\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                                <Row>\r\n                                    <Col >\r\n                                        <Label >Dependent People</Label>\r\n                                    </Col>\r\n\r\n                                    <Col>\r\n                                        <Input type=\"select\" name=\"selectMulti\" id=\"exampleSelectMulti\" multiple\r\n                                            style={{ width: '70%', height: 60, borderWidth: 1, borderColor: '#333', borderRadius: 0 }}\r\n                                        >\r\n\r\n                                            {[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10].map((item) =>\r\n                                                <option\r\n                                                    style={{ color: item == numOfDependent ? 'red' : 'black' }}\r\n                                                    onClick={() => setNumOfDependent(item)}\r\n                                                >{item}</option>\r\n                                            )}\r\n                                        </Input>\r\n                                    </Col>\r\n                                </Row>\r\n                            </FormGroup>\r\n                            <Button\r\n                                onClick={onSubmit}\r\n                            >Submit</Button>\r\n\r\n                            {result != null &&\r\n                                <FormGroup>\r\n                                    <Row style={{\r\n                                        display: 'flex',\r\n                                        flexDirection: 'row',\r\n                                        justifyContent: 'center',\r\n                                        alignItems: 'center',\r\n                                        marginTop: 30,\r\n                                    }}>\r\n                                        <h3>Your income tax is:</h3>\r\n                                        <NumberFormat\r\n                                            value={result}\r\n                                            className=\"foo\"\r\n                                            displayType={'text'}\r\n                                            thousandSeparator={true}\r\n                                            suffix={' VND'}\r\n                                            renderText={(value, props) => <h2 {...props} style={{ marginLeft: 10 }}>{`${value}`}</h2>}\r\n                                        />\r\n                                    </Row>\r\n\r\n                                </FormGroup>\r\n                            }\r\n                        </Form>\r\n\r\n                    </TabPane>\r\n                    <TabPane tabId=\"2\">\r\n                        <History currentUser={currentUser} />\r\n                    </TabPane>\r\n                </TabContent>\r\n            </div>\r\n        </Container>\r\n\r\n    )\r\n}\r\n\r\nconst styles = {\r\n    text: {\r\n        fontWeight: 'bold',\r\n        margin: '0 5px',\r\n    },\r\n    icon: {\r\n        height: '1.5rem',\r\n        width: '1.2rem',\r\n        margin: '0 5px',\r\n    }\r\n}","import React, { Component } from \"react\";\r\nimport \"./styles.css\";\r\n\r\nimport { connect } from 'react-redux'\r\nimport { setCurrentUser } from './redux/user/user.actions'\r\n\r\nimport { auth } from './firebase/firebase.utils'\r\n\r\nimport SignIn from './pages/Signin'\r\nimport Main from \"./pages/Main\";\r\n\r\n\r\nclass App extends Component {\r\n\r\n  componentDidMount() {\r\n    const { setCurrentUser } = this.props\r\n\r\n    auth.onAuthStateChanged(user => {\r\n      setCurrentUser(user)\r\n      console.log(user)\r\n    })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        {this.props.currentUser ?\r\n          <Main currentUser={this.props.currentUser} />\r\n          :\r\n          <SignIn />\r\n        }\r\n\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({ user }) => ({\r\n  currentUser: user.currentUser,\r\n})\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  setCurrentUser: (user) => dispatch(setCurrentUser(user)),\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(App)","import UserTypes from './user.types'\r\n\r\nexport const setCurrentUser = (user) => ({\r\n    type: UserTypes.SET_CURRENT_USER,\r\n    payload: user,\r\n})\r\n","import UserTypes from './user.types'\r\n\r\nconst INITIAL_STATE = {\r\n    currentUser: null,\r\n}\r\n\r\nconst userReducer = (state = INITIAL_STATE, action) => {\r\n    switch(action.type) {\r\n        case UserTypes.SET_CURRENT_USER:\r\n            return {\r\n                ...state,\r\n                currentUser: action.payload,\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default userReducer","import { combineReducers } from 'redux'\r\n\r\nimport userReducer from './user/user.reducer'\r\n\r\nexport default combineReducers({\r\n    user: userReducer,\r\n})","import { createStore, applyMiddleware } from 'redux'\r\n\r\nimport logger from 'redux-logger'\r\n\r\nimport rootReducer from './root-reducer'\r\n\r\nconst middleWares = [logger]\r\n\r\nconst store = createStore(rootReducer, applyMiddleware(...middleWares))\r\n\r\nexport default store","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { Provider } from 'react-redux'\r\nimport BrowserRouter from 'react-router-dom/BrowserRouter'\r\nimport App from \"./App\";\r\n\r\nimport store from './redux/store'\r\n\r\nconst rootElement = document.getElementById(\"root\");\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <React.StrictMode>\r\n      <App />\r\n    </React.StrictMode>\r\n  </Provider>,\r\n  rootElement\r\n);\r\n"],"sourceRoot":""}